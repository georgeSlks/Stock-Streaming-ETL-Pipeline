services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=controller,broker
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:29093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LOG_DIRS=/var/lib/kafka/data
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:29093
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE=false
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafka-ui
    environment:
      - KAFKA_BROKERCONNECT=kafka:29092
    ports:
      - "9000:9000"

  postgres:
    image: postgres:14.17
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=stock_database
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    configs:
      - source: init-db
        target: /docker-entrypoint-initdb.d/init.sql

configs:
  init-db:
    content: |
      CREATE TABLE IF NOT EXISTS stock_prices (
          id SERIAL PRIMARY KEY,
          symbol TEXT,
          price NUMERIC,
          timestamp TIMESTAMP
      );

volumes:
  kafka-data:
  db-data:
